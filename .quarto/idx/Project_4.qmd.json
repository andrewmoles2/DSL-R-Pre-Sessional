{"title":"Project 4 - Football data analysis","markdown":{"yaml":{"title":"Project 4 - Football data analysis","format":{"html":{"self-contained":true,"toc":true,"toc-depth":4,"toc-location":"right-body"}},"author":[{"name":"Andrew Moles","affiliation":"Learning Developer, Digital Skills Lab"}],"date":"today"},"headingText":"Learning objectives:","containsRefs":false,"markdown":"\n\n- Load in data\n- Modify your data using calculations on and across columns\n- Get summary statistics from data\n- Filter rows and selecting columns of a dataset\n\n## Outcomes\n\nWe will write a program that provides us with various metrics on Harry Kane (a football player). Your code will automate the process of loading the data, performing operations on that data, and making it into a presentable format. \n\nWe will be aiming for two outcomes in this project. \n\n### Outcome 1 - total career summary statistics {#sec-outcomeone}\n\nYou should end up with a output that contains the following information, presented as two text outputs:\n\n1) The name of the player. Harry Kane in this case\n2) The number of seasons played\n3) The total number of appearances\n4) The total number of goals scored\n5) The total number of goals and assists combined\n6) The average expected goals\n\n***\n\n```{r solution_1}\n#| echo: false\n\nkane <- read.csv(\"resources/harry_kane_stats.csv\")\n\nkane <- kane |>\n  transform(\n    # goals plus assists\n    goals_assists = goals + assists,\n    # goals minus penalties\n    goals_no_pens = goals - pens,\n    # pen conversion ratio\n    #pen_conversion = pens/pens_attempted,\n    # xG vs goal diff\n    # greater means the player is a better finisher, less means not so good.\n    goals_xg_diff = goals - expected_goals\n  )\n\n# summary\n#summary(kane)\n\n# player name\nplayer_name <- \"Harry Kane\"\n# total goals\ntotal_goals <- sum(kane$goals)\n# total goals + assists\ntotal_goals_assists <- sum(kane[[\"goals_assists\"]])\n# average expected goals\navg_exp_goals <- round(mean(kane$expected_goals, na.rm = TRUE),1)\n# average goals xg diff\navg_goal_xg_diff <- mean(kane$goals_xg_diff, na.rm = TRUE)\n# total appearances\napps <- sum(kane$matches_played)\n# n seasons\nn_seasons <- length(unique(kane$age))\n# which year was the best year for goals + assists?\n#kane[ which.max(kane$goals_assists), c(\"season\", \"age\", \"squad\", \"goals_assists\", \"goals_xg_diff\")]\n\n# overall stats\npaste0(\"Player: \", player_name, \n       \" | Seasons: \", n_seasons,\n       \" | Appearances: \", apps)\n\npaste0(\"Goals: \",total_goals,\n       \" | Goals and assists: \", total_goals_assists,\n       \" | Average expected goals: \", avg_exp_goals)\n\n\n#cat(\n#  paste0(\"Player: \", player_name),\n#  paste0(\"Seasons: \",n_seasons),\n#  paste0(\"Appearances:\",apps),\n#  paste0(\"Goals:\",total_goals),\n#  paste0(\"Goals and assists: \", total_goals_assists),\n#  paste0(\"Average expected goals: \", avg_exp_goals),\n#  sep = \"\\n\"\n#)\n```\n\n***\n\n### Outcome 2 - filtered dataset showing highest scoring years {#sec-outcometwo}\n\nYou should end up with a output that shows a filtered dataset with some selected columns. \n\nYou will need to create the columns `goals_assists`, `goals_xg_diff`, `goals_no_pens` to get this output. \n\n***\n\n```{r solution_2}\n#| echo: false\n\n# over 30 goals and assists\nselected_cols <- c(\"season\", \"age\", \"squad\",\n                   \"goals\", \"goals_assists\", \n                   \"goals_xg_diff\", \"goals_no_pens\")\n# classic indexing\n#kane[kane$goals_assists > 30, selected_cols]\n\n# using subset (similar to filter method in dplyr)\nkane_best <- subset(kane,\n       goals_assists > 30,\n       select = selected_cols)\nkane_best\n\n# dplyr method\n#kane |> dplyr::select(all_of(selected_cols)) |> dplyr::filter(goals_assists > 30)\n```\n\n***\n\n### The data\n\nWe will be using the csv file provided (`harry_kane_stats.csv`). Click the link below to download the data. \n\n{{< downloadthis resources/harry_kane_stats.csv label='Download csv file' dname=project_4_data icon=folder-fill type=success >}}\n\nThe dataset provides general football metrics on each season Harry Kane has played, from 2010-2025. \n\nIf you are not sure what the expected goals and assists columns mean, you can find the definitions on [the statsperform webpage](https://www.statsperform.com/opta-event-definitions/), under the header *'Expected Goals & Expected Assists'*. \n\n## Steps to help you get to the outcome\n\n### Part 1 - the setup\nOpen an R script file and save it. Make sure to save the dataset in the same folder as your R script file. \n\n### Part 2 - load in the dataset\nImport the csv file into R. \n\nView the dataset you just loaded into R. \n\n### Part 3 - column calculations\nOur dataset is missing useful information about our players season statistics. Fortunately we can calculate these! \n\nCalculate the following metrics and add them as columns to your dataset.\n\n- Combined goals and assists per season  \n- Goals excluding penalties \n- Difference between goals scored and expected goals\n\n### Part 4 - calculating the total career statistics\nTo build our career summary we will need to create variables with the metrics we need by performing calculations on columns in the dataset. \n\n- The name of the player. Harry Kane in this case \n- The number of seasons played   \n- The total number of appearances \n- The total number of goals scored \n- The total number of combined goals and assists \n- The average expected goals \n\nThe metrics you produce should match what we see in @sec-outcomeone.  \n\n### Part 5 - making career summary\nPrint out the multi line string message that shows you the career summary metrics.\n\n### Part 6 - filtering rows of a dataset\nSubset your dataset to only contain seasons where our players combined goals and assists where greater than 30. \n\nIt is good practice to assign the results of your subset to a new data frame under a different name. \n\n### Part 7 - selecting columns of a dataset\nSelect the columns, shown in the second outcome, to make your results more presentable. \n\nYou should be able to adjust the code you have written to select the columns. Your outcome should be the same as seen in @sec-outcometwo. \n\n### Final task - fill out the survey!\n\n\nWe are always looking to improve and iterate our workshops. [Follow the link to give your feedback](https://lse.eu.qualtrics.com/jfe/form/SV_79QvS52ZX3evC4K?coursename=R Projects 4: Football Data Analysis&topic=R&prog=DS&version=25-26){target=\"_blank\"}.\n\n\n\n```{r datatable}\n#| echo: false\n#| eval: false\n# solution using data.table package\nlibrary(data.table)\n\nkane <- fread(\"resources/harry_kane_stats.csv\")\n\n# option of multiple assignments\nkane[, `:=` (\n  goals_assists = goals + assists,\n  goals_no_pens = goals - pens,\n  goals_xg_diff = goals - expected_goals\n)]\n\n# examiple of single assignment\n#kane[, goals_assists := goals + assists]\n\ntotal_goals <- sum(kane$goals)\ntotal_goals_assists <- sum(kane[[\"goals_assists\"]])\navg_exp_goals <- round(mean(kane$expected_goals, na.rm = TRUE),1)\navg_goal_xg_diff <- mean(kane$goals_xg_diff, na.rm = TRUE)\napps <- sum(kane$matches_played)\nn_seasons <- length(unique(kane$age))\n\ncat(\n  \"Player: Harry Kane\\n\",\n  \"Seasons: \", n_seasons,\n  \"\\nAppearances: \", apps,\n  \"\\nGoals: \", total_goals,\n  \"\\nGoals and assists: \", total_goals_assists,\n  \"\\nAverage expected goals: \", avg_exp_goals,\n  sep = \"\"\n)\n\nselected_cols <- c(\"season\", \"age\", \"squad\",\n                   \"goals\", \"goals_assists\", \n                   \"goals_xg_diff\", \"goals_no_pens\")\n\n# option 1 on selecting columns with a filter\nkane[goals_assists > 30, \n     .(season, age, squad,\n       goals, goals_assists, \n       goals_xg_diff, goals_no_pens)]\n\n# option 2 using pre named variable with .. prefix\n#kane[goals_assists > 30 , ..selected_cols]\n\nlibrary(ggplot2)\n\nkane_long <- melt(kane,\n     id.vars = \"age\",\n     measure.vars = c(\"goals\", \"assists\"),\n     variable.name = \"goals_assists\")\n\n# fix multiple rows at the age of 19\nkane_long[, \n          .(value = sum(value)), \n          by = .(age, goals_assists)]\n\nggplot(kane_long, aes(age, value, colour = goals_assists)) +\n  geom_line()\n\n```\n\n\n\n","srcMarkdownNoYaml":"\n\n## Learning objectives:\n- Load in data\n- Modify your data using calculations on and across columns\n- Get summary statistics from data\n- Filter rows and selecting columns of a dataset\n\n## Outcomes\n\nWe will write a program that provides us with various metrics on Harry Kane (a football player). Your code will automate the process of loading the data, performing operations on that data, and making it into a presentable format. \n\nWe will be aiming for two outcomes in this project. \n\n### Outcome 1 - total career summary statistics {#sec-outcomeone}\n\nYou should end up with a output that contains the following information, presented as two text outputs:\n\n1) The name of the player. Harry Kane in this case\n2) The number of seasons played\n3) The total number of appearances\n4) The total number of goals scored\n5) The total number of goals and assists combined\n6) The average expected goals\n\n***\n\n```{r solution_1}\n#| echo: false\n\nkane <- read.csv(\"resources/harry_kane_stats.csv\")\n\nkane <- kane |>\n  transform(\n    # goals plus assists\n    goals_assists = goals + assists,\n    # goals minus penalties\n    goals_no_pens = goals - pens,\n    # pen conversion ratio\n    #pen_conversion = pens/pens_attempted,\n    # xG vs goal diff\n    # greater means the player is a better finisher, less means not so good.\n    goals_xg_diff = goals - expected_goals\n  )\n\n# summary\n#summary(kane)\n\n# player name\nplayer_name <- \"Harry Kane\"\n# total goals\ntotal_goals <- sum(kane$goals)\n# total goals + assists\ntotal_goals_assists <- sum(kane[[\"goals_assists\"]])\n# average expected goals\navg_exp_goals <- round(mean(kane$expected_goals, na.rm = TRUE),1)\n# average goals xg diff\navg_goal_xg_diff <- mean(kane$goals_xg_diff, na.rm = TRUE)\n# total appearances\napps <- sum(kane$matches_played)\n# n seasons\nn_seasons <- length(unique(kane$age))\n# which year was the best year for goals + assists?\n#kane[ which.max(kane$goals_assists), c(\"season\", \"age\", \"squad\", \"goals_assists\", \"goals_xg_diff\")]\n\n# overall stats\npaste0(\"Player: \", player_name, \n       \" | Seasons: \", n_seasons,\n       \" | Appearances: \", apps)\n\npaste0(\"Goals: \",total_goals,\n       \" | Goals and assists: \", total_goals_assists,\n       \" | Average expected goals: \", avg_exp_goals)\n\n\n#cat(\n#  paste0(\"Player: \", player_name),\n#  paste0(\"Seasons: \",n_seasons),\n#  paste0(\"Appearances:\",apps),\n#  paste0(\"Goals:\",total_goals),\n#  paste0(\"Goals and assists: \", total_goals_assists),\n#  paste0(\"Average expected goals: \", avg_exp_goals),\n#  sep = \"\\n\"\n#)\n```\n\n***\n\n### Outcome 2 - filtered dataset showing highest scoring years {#sec-outcometwo}\n\nYou should end up with a output that shows a filtered dataset with some selected columns. \n\nYou will need to create the columns `goals_assists`, `goals_xg_diff`, `goals_no_pens` to get this output. \n\n***\n\n```{r solution_2}\n#| echo: false\n\n# over 30 goals and assists\nselected_cols <- c(\"season\", \"age\", \"squad\",\n                   \"goals\", \"goals_assists\", \n                   \"goals_xg_diff\", \"goals_no_pens\")\n# classic indexing\n#kane[kane$goals_assists > 30, selected_cols]\n\n# using subset (similar to filter method in dplyr)\nkane_best <- subset(kane,\n       goals_assists > 30,\n       select = selected_cols)\nkane_best\n\n# dplyr method\n#kane |> dplyr::select(all_of(selected_cols)) |> dplyr::filter(goals_assists > 30)\n```\n\n***\n\n### The data\n\nWe will be using the csv file provided (`harry_kane_stats.csv`). Click the link below to download the data. \n\n{{< downloadthis resources/harry_kane_stats.csv label='Download csv file' dname=project_4_data icon=folder-fill type=success >}}\n\nThe dataset provides general football metrics on each season Harry Kane has played, from 2010-2025. \n\nIf you are not sure what the expected goals and assists columns mean, you can find the definitions on [the statsperform webpage](https://www.statsperform.com/opta-event-definitions/), under the header *'Expected Goals & Expected Assists'*. \n\n## Steps to help you get to the outcome\n\n### Part 1 - the setup\nOpen an R script file and save it. Make sure to save the dataset in the same folder as your R script file. \n\n### Part 2 - load in the dataset\nImport the csv file into R. \n\nView the dataset you just loaded into R. \n\n### Part 3 - column calculations\nOur dataset is missing useful information about our players season statistics. Fortunately we can calculate these! \n\nCalculate the following metrics and add them as columns to your dataset.\n\n- Combined goals and assists per season  \n- Goals excluding penalties \n- Difference between goals scored and expected goals\n\n### Part 4 - calculating the total career statistics\nTo build our career summary we will need to create variables with the metrics we need by performing calculations on columns in the dataset. \n\n- The name of the player. Harry Kane in this case \n- The number of seasons played   \n- The total number of appearances \n- The total number of goals scored \n- The total number of combined goals and assists \n- The average expected goals \n\nThe metrics you produce should match what we see in @sec-outcomeone.  \n\n### Part 5 - making career summary\nPrint out the multi line string message that shows you the career summary metrics.\n\n### Part 6 - filtering rows of a dataset\nSubset your dataset to only contain seasons where our players combined goals and assists where greater than 30. \n\nIt is good practice to assign the results of your subset to a new data frame under a different name. \n\n### Part 7 - selecting columns of a dataset\nSelect the columns, shown in the second outcome, to make your results more presentable. \n\nYou should be able to adjust the code you have written to select the columns. Your outcome should be the same as seen in @sec-outcometwo. \n\n### Final task - fill out the survey!\n\n\nWe are always looking to improve and iterate our workshops. [Follow the link to give your feedback](https://lse.eu.qualtrics.com/jfe/form/SV_79QvS52ZX3evC4K?coursename=R Projects 4: Football Data Analysis&topic=R&prog=DS&version=25-26){target=\"_blank\"}.\n\n\n\n```{r datatable}\n#| echo: false\n#| eval: false\n# solution using data.table package\nlibrary(data.table)\n\nkane <- fread(\"resources/harry_kane_stats.csv\")\n\n# option of multiple assignments\nkane[, `:=` (\n  goals_assists = goals + assists,\n  goals_no_pens = goals - pens,\n  goals_xg_diff = goals - expected_goals\n)]\n\n# examiple of single assignment\n#kane[, goals_assists := goals + assists]\n\ntotal_goals <- sum(kane$goals)\ntotal_goals_assists <- sum(kane[[\"goals_assists\"]])\navg_exp_goals <- round(mean(kane$expected_goals, na.rm = TRUE),1)\navg_goal_xg_diff <- mean(kane$goals_xg_diff, na.rm = TRUE)\napps <- sum(kane$matches_played)\nn_seasons <- length(unique(kane$age))\n\ncat(\n  \"Player: Harry Kane\\n\",\n  \"Seasons: \", n_seasons,\n  \"\\nAppearances: \", apps,\n  \"\\nGoals: \", total_goals,\n  \"\\nGoals and assists: \", total_goals_assists,\n  \"\\nAverage expected goals: \", avg_exp_goals,\n  sep = \"\"\n)\n\nselected_cols <- c(\"season\", \"age\", \"squad\",\n                   \"goals\", \"goals_assists\", \n                   \"goals_xg_diff\", \"goals_no_pens\")\n\n# option 1 on selecting columns with a filter\nkane[goals_assists > 30, \n     .(season, age, squad,\n       goals, goals_assists, \n       goals_xg_diff, goals_no_pens)]\n\n# option 2 using pre named variable with .. prefix\n#kane[goals_assists > 30 , ..selected_cols]\n\nlibrary(ggplot2)\n\nkane_long <- melt(kane,\n     id.vars = \"age\",\n     measure.vars = c(\"goals\", \"assists\"),\n     variable.name = \"goals_assists\")\n\n# fix multiple rows at the age of 19\nkane_long[, \n          .(value = sum(value)), \n          by = .(age, goals_assists)]\n\nggplot(kane_long, aes(age, value, colour = goals_assists)) +\n  geom_line()\n\n```\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["webr"],"css":["css/styles.css"],"toc":true,"toc-depth":4,"include-in-header":["progress-bar.html"],"self-contained":true,"output-file":"Project_4.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","webr":{"show-startup-message":true,"packages":["ggplot2","dplyr"]},"theme":{"light":["spacelab","css/roboto.css"],"dark":["darkly","css/roboto.css"]},"toc-location":"right-body","mainfont":"roboto","grid":{"sidebar-width":"320px"},"lightbox":"auto","title":"Project 4 - Football data analysis","author":[{"name":"Andrew Moles","affiliation":"Learning Developer, Digital Skills Lab"}],"date":"today"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}